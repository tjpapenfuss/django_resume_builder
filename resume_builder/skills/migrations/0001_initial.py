# Generated by Django 5.2.5 on 2025-08-24 00:37

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('skill_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('years_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('details', models.JSONField(blank=True, default=dict, null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('skill_type', models.CharField(blank=True, choices=[('Soft', 'Soft Skill'), ('Hard', 'Hard Skill'), ('Technical', 'Technical Skill'), ('Transferable', 'Transferable Skill'), ('Other', 'Other Skill')], max_length=50, null=True)),
                ('skill_level', models.CharField(blank=True, choices=[('Entry', 'Entry level'), ('Intermediate', 'Intermediate level'), ('Advanced', 'Advanced level'), ('Expert', 'Expert level'), ('Mastery', 'Mastery level')], max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'skill',
                'constraints': [models.UniqueConstraint(fields=('user', 'title'), name='unique_user_title'), models.CheckConstraint(condition=models.Q(('skill_type__in', ['Soft', 'Hard', 'Technical', 'Transferable', 'Other'])), name='valid_skill_type'), models.CheckConstraint(condition=models.Q(('years_experience__gte', 0)), name='non_negative_years_experience'), models.CheckConstraint(condition=models.Q(('skill_level__in', ['Entry', 'Intermediate', 'Advanced', 'Expert', 'Mastery'])), name='valid_skill_level')],
            },
        ),
    ]
