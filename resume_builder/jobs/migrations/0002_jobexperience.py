# Generated by Django 5.2.5 on 2025-09-04 18:09

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('experience', '0004_experience_skills'),
        ('jobs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='JobExperience',
            fields=[
                ('job_experience_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relevance', models.CharField(choices=[('created_for', 'Created Specifically For This Job'), ('highly_relevant', 'Highly Relevant'), ('somewhat_relevant', 'Somewhat Relevant'), ('manually_linked', 'Manually Linked by User')], default='highly_relevant', max_length=20)),
                ('target_skills', models.JSONField(default=list, help_text='Skills this experience was meant to demonstrate for this job')),
                ('match_score', models.FloatField(blank=True, help_text='How well this experience matches job requirements (0-100)', null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('creation_source', models.CharField(choices=[('quick_add', 'Quick Add Modal'), ('manual_link', 'Manual User Link'), ('ai_suggestion', 'AI Suggested'), ('skill_gap_analysis', 'From Skill Gap Analysis')], default='manual_link', max_length=20)),
                ('relevance_notes', models.TextField(blank=True, help_text='User notes about how this experience relates to the job')),
                ('experience', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_jobs', to='experience.experience')),
                ('job_posting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_experiences', to='jobs.jobposting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'job_experience',
                'indexes': [models.Index(fields=['user', 'job_posting'], name='job_experie_user_id_dfcc86_idx'), models.Index(fields=['user', 'relevance'], name='job_experie_user_id_91f970_idx'), models.Index(fields=['job_posting', 'match_score'], name='job_experie_job_pos_c44552_idx')],
                'unique_together': {('job_posting', 'experience')},
            },
        ),
    ]
